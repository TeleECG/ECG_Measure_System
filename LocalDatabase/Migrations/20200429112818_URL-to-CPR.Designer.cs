// <auto-generated />
using System;
using LocalDatabase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LocalDatabase.Migrations
{
    [DbContext(typeof(BloggingContext))]
    [Migration("20200429112818_URL-to-CPR")]
    partial class URLtoCPR
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3");

            modelBuilder.Entity("LocalDatabase.ECGLead", b =>
                {
                    b.Property<int>("ECGLeadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ECGLeadValue")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ECGMeasurementId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LeadNumber")
                        .HasColumnType("INTEGER");

                    b.HasKey("ECGLeadId");

                    b.HasIndex("ECGMeasurementId");

                    b.ToTable("ECGLeads");
                });

            modelBuilder.Entity("LocalDatabase.ECGMeasurement", b =>
                {
                    b.Property<int>("ECGMeasurementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .HasColumnType("TEXT");

                    b.Property<int>("PatientId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("ECGMeasurementId");

                    b.HasIndex("PatientId");

                    b.ToTable("ECGMeasurements");
                });

            modelBuilder.Entity("LocalDatabase.Patient", b =>
                {
                    b.Property<int>("PatientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("CPRNumber")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("HRV")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Pulse")
                        .HasColumnType("INTEGER");

                    b.HasKey("PatientId");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("LocalDatabase.ECGLead", b =>
                {
                    b.HasOne("LocalDatabase.ECGMeasurement", "ECGMeasurement")
                        .WithMany("ECGLeads")
                        .HasForeignKey("ECGMeasurementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LocalDatabase.ECGMeasurement", b =>
                {
                    b.HasOne("LocalDatabase.Patient", "Patient")
                        .WithMany("ECGMeasurements")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
